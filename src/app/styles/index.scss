@import "./flex-box";
@import "./spacing";
@import "./reused";
@import "./animations";

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

@mixin font-face(
  $name,
  $path,
  $weight: null,
  $style: null,
  $exts: eot woff2 woff ttf svg
) {
  $src: null;

  $extmods: (
    eot: "?",
    svg: "#" + str-replace($name, " ", "_"),
  );

  $formats: (
    otf: "opentype",
    ttf: "truetype",
  );

  @each $ext in $exts {
    $extmod: if(
      map-has-key($extmods, $ext),
      $ext + map-get($extmods, $ext),
      $ext
    );
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append(
      $src,
      url(quote($path + "." + $extmod)) format(quote($format)),
      comma
    );
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

@include font-face(
  "BoschIcon",
  "../../assets/Bosch-Icon",
  300,
  normal,
  eot ttf svg
);
// @import "./colors";
// @import "./vars";

button:disabled {
  background-color: #ededed !important;
  cursor: not-allowed;
  // color: -internal-light-dark(rgba(16, 16, 16, 0.3), rgba(255, 255, 255, 0.3));
  // border-color: -internal-light-dark(rgba(118, 118, 118, 0.3), rgba(195, 195, 195, 0.3));
}

.flex {
  display: flex;
  &-c {
    display: flex;
    flex-direction: column;
  }
}

label {
  // color: white;
}

.news-feed {
  &-header,
  &-footer {
    padding: 0 1.5rem;
    display: flex;
    align-items: center;
  }
  &-body {
  }
  // ,
  // &-footer
}

.nor-btn {
  // display: flex;
  background-color: transparent;
}
